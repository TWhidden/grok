openapi: 3.0.3
info:
  title: Grok API
  description: API for interacting with Grok, an AI assistant created by xAI.
  version: 1.0.0
servers:
  - url: https://api.x.ai/v1
    description: Official xAI Grok API server
paths:
  /chat/completions:
    post:
      summary: Create a chat completion with Grok
      description: |
        Generates a chat completion using the specified model. 
        For reasoning-capable models (e.g., grok-3-mini, grok-3-mini-fast), 
        use the `reasoning_effort` parameter to control thinking effort and access 
        the reasoning trace via `reasoning_content` and token details via `completion_tokens_details`.
      operationId: createChatCompletion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrokChatCompletionRequest'
      responses:
        '200':
          description: Successful chat completion response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrokChatCompletionResponse'
            text/event-stream:
              schema:
                type: string
                description: |
                  Server-Sent Events stream of chat completion chunks when "stream" is true.
                  Each event is prefixed with "data: " followed by a JSON object like:
                  {"id": "<id>", "object": "chat.completion.chunk", "created": <time>,
                  "model": "<model>", "choices": [{"index": 0, "delta": {"content": "<text>", "role": "assistant"}}],
                  "usage": {...}, "system_fingerprint": "<fingerprint>"}
                  Ends with "data: [DONE]".
        '400':
          description: Invalid request (e.g., missing messages)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrokErrorResponse'
  /images/generations:
    post:
      summary: Generate images using Grok
      operationId: generateImages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrokImageGenerationRequest'
      responses:
        '200':
          description: Successful image generation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrokImageGenerationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrokErrorResponse'
components:
  schemas:
    GrokChatCompletionRequest:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/GrokMessage'
          description: List of messages in the conversation
        model:
          type: string
          description: The Grok model to use (e.g., grok-3-latest)
          example: "grok-3-latest"
        stream:
          type: boolean
          description: Whether to stream the response as Server-Sent Events
          default: false
        temperature:
          type: number
          format: float
          description: Controls randomness (0 = deterministic, higher = more creative)
          minimum: 0
          maximum: 2
          default: 0
        tools:
          type: array
          items:
            $ref: '#/components/schemas/GrokTool'
          description: List of tools (functions) available to the model
        tool_choice:
          oneOf:
            - type: string
              enum: ["auto", "required", "none"]
            - type: object
              properties:
                type:
                  type: string
                  enum: ["function"]
                function:
                  type: object
                  properties:
                    name:
                      type: string
              required:
                - type
                - function
            - type: 'null'
          default: null
          description: |
            Controls tool usage. Set to null or omit when no tools are provided.
            - "auto": model decides whether to use tools
            - "required": force tool call
            - "none": disable tool usage
            - object: specify a particular function
        reasoning_effort:
          type: string
          enum:
            - low
            - high
          nullable: true
          default: null
          description: Controls how much time the model spends thinking before responding. Only applicable for reasoning-capable models (e.g., grok-3-mini, grok-3-mini-fast). 'low' for quick responses, 'high' for complex reasoning.
        search_parameters:
          $ref: '#/components/schemas/GrokSearchParameters'
          description: Parameters for live search functionality. Optional and defaults to null if not provided.
          nullable: true
          default: null
      required:
        - messages
        - model

    GrokChatCompletionResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the completion
          example: "9116ebda-e5d9-4885-b374-ea891b6b693c"
        object:
          type: string
          description: Type of object returned
          example: "chat.completion"
        created:
          type: integer
          description: Unix timestamp of when the completion was created
          example: 1739936964
        model:
          type: string
          description: The model used for the completion
          example: "grok-2-1212"
        choices:
          type: array
          items:
            $ref: '#/components/schemas/GrokChoice'
          description: List of response choices
        usage:
          $ref: '#/components/schemas/GrokUsage'
        system_fingerprint:
          type: string
          description: Unique identifier for the system configuration
          example: "fp_c612364da3"
        citations:
          type: array
          items:
            type: string
          description: List of citation URLs when return_citations is true. Optional and only included if LiveSearch is used.
      required:
        - id
        - object
        - created
        - model
        - choices
        - usage

    GrokMessage:
      type: object
      properties:
        role:
          type: string
          enum: ["system", "user", "assistant", "tool"]
      required:
        - role
      discriminator:
        propertyName: role
        mapping:
          system: '#/components/schemas/GrokSystemMessage'
          user: '#/components/schemas/GrokUserMessage'
          assistant: '#/components/schemas/GrokAssistantMessage'
          tool: '#/components/schemas/GrokToolMessage'

    GrokSystemMessage:
      allOf:
        - $ref: '#/components/schemas/GrokMessage'
        - type: object
          properties:
            content:
              type: string
              description: Simple text content for the system message
          required:
            - content

    GrokUserMessage:
      allOf:
        - $ref: '#/components/schemas/GrokMessage'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/GrokContent'
              description: Array of content parts (e.g., text, images). Supports Image Understanding via image_url parts.
          required:
            - content

    GrokAssistantMessage:
      allOf:
        - $ref: '#/components/schemas/GrokMessage'
        - type: object
          properties:
            content:
              type: string
              description: Simple text content; may be a JSON string for structured outputs
            tool_calls:
              type: array
              items:
                $ref: '#/components/schemas/GrokToolCall'
              description: List of tool calls requested by the assistant
            reasoning_content:
              type: string
              description: The model's thought process before generating the response. Only present for reasoning-capable models (e.g., grok-3-mini, grok-3-mini-fast).
          required:
            - content

    GrokToolMessage:
      allOf:
        - $ref: '#/components/schemas/GrokMessage'
        - type: object
          properties:
            content:
              type: string
              description: Simple text content; typically a JSON string of the tool result
            tool_call_id:
              type: string
              description: ID of the tool call this result corresponds to
          required:
            - content
            - tool_call_id

    GrokContent:
      type: object
      properties:
        type:
          type: string
          enum: ["text", "image_url"]
          description: The type of content part
      required:
        - type
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/GrokTextPart'
          image_url: '#/components/schemas/GrokImageUrlPart'
      description: Base type for content parts, with subtypes distinguished by the 'type' property

    GrokTextPart:
      allOf:
        - $ref: '#/components/schemas/GrokContent'
        - type: object
          properties:
            text:
              type: string
              description: The text content
          required:
            - text
          description: A content part containing text

    GrokImageUrlPart:
      allOf:
        - $ref: '#/components/schemas/GrokContent'
        - type: object
          properties:
            image_url:
              $ref: '#/components/schemas/GrokImageUrl'
          required:
            - image_url
          description: A content part containing an image URL or base64-encoded image for Image Understanding

    GrokImageUrl:
      type: object
      properties:
        url:
          type: string
          description: URL or base64-encoded image (e.g., "data:image/jpeg;base64,<data>"). Supported formats jpg/jpeg, png. Maximum size 10MiB.
        detail:
          type: string
          enum: ["low", "high"]
          description: Level of detail for the image
      required:
        - url

    GrokTool:
      type: object
      properties:
        type:
          type: string
          enum: ["function"]
        function:
          $ref: '#/components/schemas/GrokFunctionDefinition'
      required:
        - type
        - function

    GrokFunctionDefinition:
      type: object
      properties:
        name:
          type: string
          description: Name of the function
        description:
          type: string
          description: Function description
        parameters:
          type: object
          additionalProperties: true
          description: JSON schema for function parameters
      required:
        - name
        - parameters

    GrokToolCall:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the tool call
        type:
          type: string
          enum: ["function"]
        function:
          type: object
          properties:
            name:
              type: string
              description: Function name
            arguments:
              type: string
              description: JSON string of function arguments
          required:
            - name
            - arguments
      required:
        - id
        - type
        - function

    GrokChoice:
      type: object
      properties:
        index:
          type: integer
          description: Index of the choice
          example: 0
        message:
          $ref: '#/components/schemas/GrokAssistantMessage'
        finish_reason:
          type: string
          enum: ["stop", "length", "error", "tool_calls"]
          description: Reason the completion stopped
          example: "stop"
      required:
        - index
        - message
        - finish_reason

    GrokUsage:
      type: object
      properties:
        prompt_tokens:
          type: integer
          description: Number of tokens in the prompt
          example: 28
        completion_tokens:
          type: integer
          description: Number of tokens in the completion
          example: 5
        total_tokens:
          type: integer
          description: Total number of tokens used
          example: 33
        prompt_tokens_details:
          $ref: '#/components/schemas/GrokPromptTokensDetails'
        completion_tokens_details:
          $ref: '#/components/schemas/GrokCompletionTokensDetails'
          description: Details about completion tokens, including reasoning tokens for reasoning-capable models (e.g., grok-3-mini, grok-3-mini-fast).
      required:
        - prompt_tokens
        - completion_tokens
        - total_tokens

    GrokPromptTokensDetails:
      type: object
      properties:
        text_tokens:
          type: integer
          description: Number of text tokens in the prompt
          example: 28
        audio_tokens:
          type: integer
          description: Number of audio tokens (if applicable)
          example: 0
        image_tokens:
          type: integer
          description: Number of image tokens (if applicable)
          example: 0
        cached_tokens:
          type: integer
          description: Number of cached tokens (if applicable)
          example: 0
      required:
        - text_tokens
        - audio_tokens
        - image_tokens
        - cached_tokens

    GrokCompletionTokensDetails:
      type: object
      properties:
        reasoning_tokens:
          type: integer
          description: Number of tokens used for reasoning in the response.
      required:
        - reasoning_tokens
      description: Breakdown of completion tokens, detailing tokens used for reasoning. Only present for reasoning-capable models.

    GrokErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Invalid request: messages array is required"
      required:
        - error

    GrokImageGenerationRequest:
      type: object
      properties:
        prompt:
          type: string
          description: The text prompt to generate images from
        n:
          type: integer
          description: The number of images to generate
          default: 1
          minimum: 1
          maximum: 10
        response_format:
          type: string
          enum:
            - url
            - b64_json
          default: url
          description: The format of the response, either "url" or "b64_json"
        model:
          type: string
          description: The model to use for image generation
          default: "grok-2-image-1212"
      required:
        - prompt

    GrokImageGenerationResponse:
      type: object
      properties:
        created:
          type: integer
          description: Unix timestamp of when the response was created
        data:
          type: array
          items:
            $ref: '#/components/schemas/GrokImageData'
      required:
        - data

    GrokImageData:
      type: object
      properties:
        url:
          type: string
          description: URL of the generated image (present if response_format is "url")
        b64_json:
          type: string
          description: Base64-encoded image data (present if response_format is "b64_json")
        revised_prompt:
          type: string
          description: The revised prompt used for image generation
      required:
        - revised_prompt

    GrokSearchParameters:
      type: object
      properties:
        mode:
          type: string
          enum:
            - auto
            - on
            - off
          default: auto
          description: Controls the search mode. 'auto' lets the model decide, 'on' forces search, 'off' disables search.
        return_citations:
          type: boolean
          default: true
          description: Whether to return citations in the response.
        from_date:
          type: string
          format: date
          nullable: true
          default: null
          description: Start date for search data in ISO8601 format (YYYY-MM-DD).
        to_date:
          type: string
          format: date
          nullable: true
          default: null
          description: End date for search data in ISO8601 format (YYYY-MM-DD).
        max_search_results:
          type: integer
          minimum: 1
          nullable: true
          default: null
          description: Maximum number of search results to consider.
        sources:
          type: array
          items:
            $ref: '#/components/schemas/GrokSource'
          description: List of data sources to use for search.
      description: Optional parameters for LiveSearch. All fields are optional and default to null or their default values.

    GrokSource:
      type: object
      properties:
        type:
          type: string
          enum:
            - web
            - x
            - news
            - rss
          description: The type of source, used to determine the specific source schema.
      required:
        - type
      discriminator:
        propertyName: type
        mapping:
          web: '#/components/schemas/GrokWebSource'
          x: '#/components/schemas/GrokXSource'
          news: '#/components/schemas/GrokNewsSource'
          rss: '#/components/schemas/GrokRssSource'

    GrokWebSource:
      allOf:
        - $ref: '#/components/schemas/GrokSource'
        - type: object
          properties:
            country:
              type: string
              description: ISO alpha-2 country code.
            excluded_websites:
              type: array
              items:
                type: string
              maxItems: 5
              description: List of websites to exclude.
            safe_search:
              type: boolean
              description: Whether to enable safe search.

    GrokXSource:
      allOf:
        - $ref: '#/components/schemas/GrokSource'
        - type: object
          properties:
            x_handles:
              type: array
              items:
                type: string
              description: List of X handles to consider.

    GrokNewsSource:
      allOf:
        - $ref: '#/components/schemas/GrokSource'
        - type: object
          properties:
            country:
              type: string
              description: ISO alpha-2 country code.
            excluded_websites:
              type: array
              items:
                type: string
              maxItems: 5
              description: List of websites to exclude.
            safe_search:
              type: boolean
              description: Whether to enable safe search.

    GrokRssSource:
      allOf:
        - $ref: '#/components/schemas/GrokSource'
        - type: object
          properties:
            links:
              type: array
              items:
                type: string
              maxItems: 1
              description: List of RSS feed URLs (currently limited to one).

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
security:
  - ApiKeyAuth: []